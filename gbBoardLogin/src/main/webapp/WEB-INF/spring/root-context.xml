<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!--데이터베이스 연결, 웹이랑 연관이 없다.   -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
		<property name="username" value="hr"/>
		<property name="password" value="hr"/>
	</bean>
	
	<!--SqlSessionFactory 마이바티스를 처리하는 중요한 객체 버전이 바뀌어서 직접적으로는 사용을 안하겠다.전에는 직접씀.. -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/><!--오라클을 쓰겠다~!  -->
		<property name="configLocation" value="classpath:/mybatis-config.xml"/><!--mybatis환경설정 파일을 여기에 두겠다.  -->
		<property name="mapperLocations" value="classpath:/mapper/*.xml"/><!--자바랑 1대1대응되는 코드  -->
		<!--resource 방 아래가 classpath:/  -->
		
		<!--configLocation : MyBatis 환경설정 파일(src/main/resource)  -->
		<!--mapperLocations : 매퍼파일 어디에 넣을까 (src/main/resources/mapper/*.xml)  -->
		
	</bean>
	
	<!--SqlSessionTemplate : spring-mybatis연동, sqlsession생성에 관여  -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<!--mapper interface : mapping 파일의 sql call을 위한 interface
	즉, mapping파일의 sql을 java interface로 호출하게 해 줌(cf. getMapper())  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- <property name="basePackage"  value="com.gb.wn.boardDAO"/>  -->
		<property name="basePackage"  value="com.gb.wn"/> 
		<!--이 패키지 아래 모든 interface가 mapper interface로 인식  -->
		<!--ArrayList<SawonVO> getAllSawon()  -->
	</bean>
	
	<!--DataSourceTransactionManager : 주소 jdbc나 mybatis로 db접근시 사용  -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>		
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- navermail설정 -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
     <property name="host" value="smtp.naver.com"/> <!-- 메이서버 호스트 -->
     <property name="port" value="465"/> <!-- 메이서버 포트번호 -->
     <property name="username" value="lisa9963@naver.com"/> <!-- 자신의 이메일 아이디 -->
     <property name="password" value="ssubong27*"/> <!-- 자신의 비밀번호 -->
       <!-- 보안연결 SSL과 관련된 설정 -->
     <property name="javaMailProperties">
      <props>
      <prop key="mail.smtp.auth">true</prop>
      <prop key="mail.smtp.starttls.enable">true</prop>
      <prop key="mail.smtps.checkserveridentity">true</prop>
      <prop key="mail.smtps.ssl.trust">*</prop>
      <prop key="mail.debug">true</prop>
      <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
      </props>
     </property>
    </bean>
	
	
</beans>
